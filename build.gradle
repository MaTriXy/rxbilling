apply plugin: "com.github.ben-manes.versions"

buildscript {
  ext.buildConfig = [
      "minSdkVersion": 21,
      "compileSdkVersion": 29,
  ]
  ext.versions = [
      "kotlin": "1.3.61"
  ]
  ext.deps = [
      "kotlinStdlib": "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
      "rxJava": "io.reactivex.rxjava3:rxjava:3.0.0-RC6",
      "billing": "com.android.billingclient:billing:2.1.0",
      "junit": "junit:junit:4.12",
      "mockitoKotlin": "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0",
      "mockitoInline": "org.mockito:mockito-inline:3.2.0"
  ]

  repositories {
    google()
    jcenter()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:3.5.3"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
    classpath "com.github.ben-manes:gradle-versions-plugin:0.27.0"
    classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.0"
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
    classpath "com.github.dcendents:android-maven-gradle-plugin:2.1"
  }
}

subprojects {
  repositories {
    google()
    jcenter()
  }

  dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
      rules.all { ComponentSelection selection ->
        boolean rejected = ["alpha", "beta", "rc", "cr", "m", "preview", "b", "ea", "snapshot"].any {
          qualifier ->
            selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
        }
        if (rejected) {
          selection.reject("Release candidate")
        }
      }
    }
  }
}